version: "3.8"

services:
  # FastAPI アプリケーションサービス
  app:
    build: . # カレントディレクトリの Dockerfile を使用
    container_name: syncfam_app
    ports:
      - "8000:80" # ホストの 8000番ポートをコンテナの 80番ポートにマッピング
    volumes:
      - ./app:/app # ホストの app ディレクトリをコンテナの /app にマウント (コード変更を即時反映)
    environment:
      # ★ データベース接続情報 (MySQL サービスを参照)
      #    実際には .env ファイルや secrets を使うことを推奨
      DATABASE_URL: mysql+mysqlconnector://user:password@db:3306/syncfam_db
      # PYTHONUNBUFFERED: 1 # Dockerfile で設定済みなら不要
    depends_on:
      db: # db サービスが起動してから app サービスを起動
        condition: service_healthy # MySQL がヘルスチェックをパスしてから
    networks:
      - syncfam_network

  # MySQL データベースサービス
  db:
    image: mysql:8.3
    container_name: syncfam_db
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # ルートパスワード (開発用)
      MYSQL_DATABASE: syncfam_db # 作成するデータベース名
      MYSQL_USER: user # 作成するユーザー名
      MYSQL_PASSWORD: password # 作成するユーザーのパスワード
    volumes:
      - mysql_data:/var/lib/mysql # 名前付きボリュームでデータを永続化
      # - ./init.sql:/docker-entrypoint-initdb.d/init.sql # 初期化用SQL (任意)
    ports:
      # ホストから直接 DB に接続したい場合 (開発時のみ推奨)
      - "3307:3306" # ホストの 3307番ポートをコンテナの 3306番ポートにマッピング
    healthcheck: # コンテナが正常に起動したか確認
      test: [
          "CMD",
          "mysqladmin",
          "ping",
          "-h",
          "localhost",
          "-u",
          "$${MYSQL_USER}",
          "-p$${MYSQL_PASSWORD}",
        ] # $$ でエスケープ
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - syncfam_network

# 名前付きボリュームの定義
volumes:
  mysql_data:

# ネットワークの定義
networks:
  syncfam_network:
    driver: bridge
